---
title: "How To"
sidebar: true
toc: true
page-layout: full
format: html
editor: visual
---

## Introduction

R is an open source programming language that is a common tool used for data analysis across a range of disciplines. This means that in addition to being free and available for a range of operating systems and environments, R is also directly supported by a diverse user community who continually develop approaches for specialized applications or data. Need to download U.S. Census Data? There's an [R package](https://walker-data.com/tidycensus/) for that. Need to perform common data cleaning tasks? There's an R package for that too. We'll be exploring a range of these specialized applications over the course of the semester.

Of course there are alternate languages which we could employ in service of neighborhood analysis. [Python](https://www.python.org/), for example, is an even more ubiquitous programming language with its own set of tools for data science. R was originally built as a *statistical computing* language, and that brings some important benefits for the types of data science we'll be learning this semester. R is also fairly prevalent among the user community working in public policy analysis and urban data science - this is the user community which you will be joining. Finally, R has a high learning curve, but also a very active user community, meaning that abundant documentation of problems and their solutions is available.

As we get started, let's be clear - you are going to experience some frustration and challenges as you learn the R programming language. This class assumes no prior background in R or any other programming language for that matter, and we'll work to quickly build your "vocabulary" and the ability to get results. We will spend some time picking up basics, and will then use our exploration of specific analysis approaches to reinforce our use of the grammar and structure of the language and to build more complex scripts over time.

It's fair to equate learning R with learning to drive a manual car. Increasingly, people learn how to drive in automatic cars - essentially allowing the car to handle the function of switching gears - you put the car into drive, press the accelerator pedal and the car moves forward. Your past exposure to computer-based analytic tools has probably followed a similar strategy - you likely learned using software that had graphical user interfaces that allow them to call up and run programs and then spit out results. Most of us learn to point and click in order to accomplish a particular set of analytic tasks, meaning that if we want to generate the same results in the future, we would have to repeat all of those same steps over again.

So why learn on a manual? For many car enthusiasts, manuals are both more efficient and more engaging to drive - they offer additional control, and come with a heightened awareness of what the car is doing. Of course, they also come with a steep learning curve.

Some of the same attributes apply to our use of R as a tool for analysis.

-   First, a manual approach forces you to explicitly understand more of the **requirements and assumptions** that go into the analysis that you're doing.

-   Second, you have to **know your data** (and its strengths and limitations) well in order to get it set up for analysis and to produce useful output.

-   Third, this approach emphasizes **reproducible analysis**, meaning that you will develop workflows that can be repeated over and over again producing the same results - important for sharing your work with others and for accountability, especially within contexts related to public deliberation of the strengths and weaknesses of policy arguments.

Keeping these three benefits in mind, we'll be using the R software coupled with the RStudio *Integrated Development Environment* (IDE) to counter some of the downsides of a purely manual approach. RStudio will help us implement R code more effectively and efficiently. Hopefully at this point, this prospect leaves you excited rather than daunted!
