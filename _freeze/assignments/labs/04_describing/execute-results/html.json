{
  "hash": "29dccf1f6fa19c62595c276a79d7b0e6",
  "result": {
    "markdown": "---\ntitle: \"Describing Places\"\nsidebar: false\ntoc: true\ntoc-depth: 4\npage-layout: full\nbibliography: ../references.bib\ncsl: ../apa-6th-edition.csl\nformat: \n  html:\n    code-fold: show\n    code-overflow: wrap\n    code-tools:\n      source: true\n      toggle: false\n      caption: none\nfig-responsive: true\neditor: visual\n---\n\n\n## Introduction\n\nIn this lab, we'll learn some techniques for creating publication-quality summary tables while working to tell policy-relevant stories about places.\n\nIn addition to thinking about the basics of how we describe places, we will perform a basic policy analysis of the location of federal Opportunity Zones. This analysis will help illustrate how we can strategically build layers of stories. We'll add some basic information about all census tracts so that we can describe the differences between ineligible, eligible but not designated, and eligible and designated census tracts.\n\n## Goals\n\n-   Set up your computer so that RStudio can communicate with your Github account.\n\n## Core Concepts\n\nThis lab asks you to practice some basic data manipulation and management skills using the dplyr package.\n\n-   Introduce several commonly used demographic indicators from the census\n-   Introduce how to join datasets together based upon a common field\n-   Introduce how to recode and classify data based upon one or more characteristics\n\nLet's get going...\n\n## Github Lab Repository\n\nIf you have not already done so, follow [this link](https://classroom.github.com/a/f9phgn1X) to accept the lab Github Classroom assignment repository.\n\n## Principles of Tidy Data\n\nIn the book [*R for Data Science*](https://r4ds.had.co.nz/tidy-data.html), Hadley Wickam describes three principles for tidy data:\n\n1.  Each variable must have its own column\n2.  Each observation must have its own row\n3.  Each value must have its own cell\n\n![](https://d33wubrfki0l68.cloudfront.net/6f1ddb544fc5c69a2478e444ab8112fb0eea23f8/91adc/images/tidy-1.png) Much of the data we work with in the context of basic planning and policy analysis applications already conforms to this format (or is easily transformed into this format). This makes packages like `tidyverse` particularly useful for the common types of data manipulation that we perform.\n\nWhile we'll occasionally use base r coding over the course of the semester, for the most part, we'll rely upon the `tidyverse` suite to help us. Let's explore some basic command syntax.\n\n### Load Example Data\n\nWe're going to work with a dataset that describes those census tracts that were designated as [Opportunity Zones](https://www.irs.gov/credits-deductions/businesses/opportunity-zones) as part of the federal [Tax Cuts and Jobs Act](https://www.congress.gov/bill/115th-congress/house-bill/1). These incentives are designed to spur investment in low-income and undercapitalized cities, by providing investors with tax incentives to invest capital in these locations.\n\nThe specific dataset which we'll work with was developed by the Urban Institute, and adds to basic identification of designated census tracts some additional analysis of the characteristics of those places.\n\n### Loading Required Packages\n\nWe're already learned how to use `install.packages()` and `library()` to (respectively) install and load packages that extend R and RStudio's functionality. As a reminder, `install.packages()` downloads the package from a central server and installs it on your computer. You only have to install a package once. Using `library()` loads that package for use in your current RStudio session. If you plan to use that package in a given analysis, you'll need to load it. To stay organized, you should load packages at the beginning of your script or markdown document.\n\n::: aside\nNote that to install the package, you need to treat the package name as a character vector `\"tidyverse\"`, but when you load it in your R session, it does not need to be treated as a character vector `tidyverse` because it is an object that R recognizes after it is installed.\n:::\n\nWe are going to load the following packages:\n\n-   `tidyverse` contains tools which we'll use to subset, filter, group, and summarize our data\n-   `readxl` contains tools which will help us to read Excel files into R\n-   `gt` contains tools for making nicely formatted tables.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\nlibrary(gt)\n```\n:::\n\n\nThe `read_xlsx()` command from the `readxl` package will read Microsoft Excel files into data tables. Let's start by loading the Urban Institute Opportunity Zone dataset:\n\nLet's read the Excel data and place it in an object called \"ozs\":\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs <- read_xlsx(\"04_describing/data/urbaninstitute_tractlevelozanalysis_update1242018.xlsx\")\n```\n:::\n\n\nYou can either do a Google search for [Readxl](https://readxl.tidyverse.org) to find documentation, or you can use R's built in documentation by typing `?readxl`\n\nAs the documentation states, `readxl` imports excel files. Looking at the documentation, the `read_excel()` command will read a single excel sheet, or we can optionally select a sheet by name or number from an excel workbook with multiple sheets. In this case, the Urban Institute data is in a workbook with a single sheet, so we just need to tell R where the file is to load.\n\n### Describing Data\n\nOne of the first steps that we should do when we load an unfamiliar dataset is to get to know it using some basic description commands.\n\nLet's use the `str()` command to analyze the dataset's structure:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nstr(ozs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\ntibble [42,176 × 27] (S3: tbl_df/tbl/data.frame)\n $ geoid                : chr [1:42176] \"01001020200\" \"01001020300\" \"01001020700\" \"01001020802\" ...\n $ state                : chr [1:42176] \"Alabama\" \"Alabama\" \"Alabama\" \"Alabama\" ...\n $ Designated           : num [1:42176] NA NA 1 NA NA NA NA 1 NA 1 ...\n $ county               : chr [1:42176] \"Autauga County\" \"Autauga County\" \"Autauga County\" \"Autauga County\" ...\n $ Type                 : chr [1:42176] \"Low-Income Community\" \"Non-LIC Contiguous\" \"Low-Income Community\" \"Non-LIC Contiguous\" ...\n $ dec_score            : num [1:42176] 4 6 9 10 5 6 6 9 10 9 ...\n $ SE_Flag              : num [1:42176] NA NA NA NA NA NA NA NA NA NA ...\n $ Population           : num [1:42176] 2196 3136 3047 10743 2899 ...\n $ medhhincome2014_tract: num [1:42176] 41107 51250 45234 61242 49567 ...\n $ PovertyRate          : num [1:42176] 0.24 0.107 0.19 0.153 0.151 ...\n $ unemprate            : num [1:42176] 0.0775 0.051 0.1407 0.0459 0.0289 ...\n $ medvalue             : num [1:42176] 95300 113800 93500 160400 102900 ...\n $ medrent              : num [1:42176] 743 817 695 1018 546 ...\n $ pctown               : num [1:42176] 0.628 0.703 0.711 0.823 0.83 ...\n $ severerentburden     : num [1:42176] 0.3269 0.3223 0.3887 0.1994 0.0994 ...\n $ vacancyrate          : num [1:42176] 0.0584 0.1399 0.0619 0.0609 0.2182 ...\n $ pctwhitealone        : num [1:42176] 0.439 0.671 0.833 0.814 0.726 ...\n $ pctblackalone        : num [1:42176] 0.5187 0.205 0.0922 0.1572 0.2456 ...\n $ pctHispanic          : num [1:42176] 0.01275 0.0727 0.0338 0.01368 0.00448 ...\n $ pctAAPIalone         : num [1:42176] 0.01093 0.01052 0 0.00959 0 ...\n $ pctunder18           : num [1:42176] 0.218 0.224 0.249 0.27 0.245 ...\n $ pctover64            : num [1:42176] 0.124 0.175 0.149 0.122 0.156 ...\n $ HSorlower            : num [1:42176] 0.581 0.464 0.544 0.45 0.621 ...\n $ BAorhigher           : num [1:42176] 0.162 0.219 0.113 0.229 0.136 ...\n $ Metro                : num [1:42176] 1 1 1 1 1 1 1 1 1 1 ...\n $ Micro                : num [1:42176] NA NA NA NA NA NA NA NA NA NA ...\n $ NoCBSAType           : num [1:42176] NA NA NA NA NA NA NA NA NA NA ...\n```\n:::\n:::\n\n\nWe get a list where each row is a variable in the dataset. We also learn more about the format of the variable (e.g. character, numeric), the number of observations, and we see examples of the first few observations.\n\nLet's next use `summary()` to get a statistical summary of each variable:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(ozs)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n    geoid              state             Designated       county         \n Length:42176       Length:42176       Min.   :1       Length:42176      \n Class :character   Class :character   1st Qu.:1       Class :character  \n Mode  :character   Mode  :character   Median :1       Mode  :character  \n                                       Mean   :1                         \n                                       3rd Qu.:1                         \n                                       Max.   :1                         \n                                       NA's   :33414                     \n     Type             dec_score         SE_Flag        Population   \n Length:42176       Min.   : 1.000   Min.   :1       Min.   :    0  \n Class :character   1st Qu.: 3.000   1st Qu.:1       1st Qu.: 2752  \n Mode  :character   Median : 5.000   Median :1       Median : 3897  \n                    Mean   : 5.495   Mean   :1       Mean   : 4147  \n                    3rd Qu.: 8.000   3rd Qu.:1       3rd Qu.: 5224  \n                    Max.   :10.000   Max.   :1       Max.   :40616  \n                    NA's   :1253     NA's   :41111   NA's   :112    \n medhhincome2014_tract  PovertyRate       unemprate          medvalue      \n Min.   :  2499        Min.   :0.0000   Min.   :0.00000   Min.   :   9999  \n 1st Qu.: 32014        1st Qu.:0.1380   1st Qu.:0.05900   1st Qu.:  85700  \n Median : 41094        Median :0.2055   Median :0.08734   Median : 122400  \n Mean   : 42153        Mean   :0.2331   Mean   :0.10063   Mean   : 165663  \n 3rd Qu.: 50833        3rd Qu.:0.2996   3rd Qu.:0.12600   3rd Qu.: 191300  \n Max.   :181406        Max.   :1.0000   Max.   :1.00000   Max.   :2000001  \n NA's   :249           NA's   :141      NA's   :141       NA's   :1106     \n    medrent           pctown       severerentburden  vacancyrate     \n Min.   :  99.0   Min.   :0.0000   Min.   :0.0000   Min.   :0.00000  \n 1st Qu.: 655.0   1st Qu.:0.3833   1st Qu.:0.1662   1st Qu.:0.07115  \n Median : 800.0   Median :0.5728   Median :0.2403   Median :0.11658  \n Mean   : 860.9   Mean   :0.5436   Mean   :0.2476   Mean   :0.14120  \n 3rd Qu.:1010.0   3rd Qu.:0.7316   3rd Qu.:0.3206   3rd Qu.:0.18011  \n Max.   :3501.0   Max.   :1.0000   Max.   :1.0000   Max.   :1.00000  \n NA's   :395      NA's   :1033     NA's   :189      NA's   :167      \n pctwhitealone    pctblackalone      pctHispanic       pctAAPIalone    \n Min.   :0.0000   Min.   :0.00000   Min.   :0.00000   Min.   :0.00000  \n 1st Qu.:0.2040   1st Qu.:0.01072   1st Qu.:0.02602   1st Qu.:0.00000  \n Median :0.5614   Median :0.06656   Median :0.09304   Median :0.00883  \n Mean   :0.5211   Mean   :0.18652   Mean   :0.22060   Mean   :0.03806  \n 3rd Qu.:0.8294   3rd Qu.:0.25000   3rd Qu.:0.32014   3rd Qu.:0.03533  \n Max.   :1.0000   Max.   :1.00000   Max.   :1.00000   Max.   :0.91144  \n NA's   :131      NA's   :131       NA's   :131       NA's   :131      \n   pctunder18       pctover64         HSorlower        BAorhigher    \n Min.   :0.0000   Min.   :0.00000   Min.   :0.0000   Min.   :0.0000  \n 1st Qu.:0.1908   1st Qu.:0.09436   1st Qu.:0.4150   1st Qu.:0.1120  \n Median :0.2300   Median :0.13604   Median :0.5182   Median :0.1679  \n Mean   :0.2295   Mean   :0.14340   Mean   :0.5067   Mean   :0.2034  \n 3rd Qu.:0.2719   3rd Qu.:0.18057   3rd Qu.:0.6113   3rd Qu.:0.2536  \n Max.   :0.6468   Max.   :1.00000   Max.   :1.0000   Max.   :1.0000  \n NA's   :131      NA's   :131       NA's   :132      NA's   :132     \n     Metro          Micro         NoCBSAType   \n Min.   :1      Min.   :1       Min.   :1      \n 1st Qu.:1      1st Qu.:1       1st Qu.:1      \n Median :1      Median :1       Median :1      \n Mean   :1      Mean   :1       Mean   :1      \n 3rd Qu.:1      3rd Qu.:1       3rd Qu.:1      \n Max.   :1      Max.   :1       Max.   :1      \n NA's   :9111   NA's   :37448   NA's   :37793  \n```\n:::\n:::\n\n\nThis gives us a statistical summary including distribution and central tendency statistics, as well as information on the number of values that are `NA`.\n\nA few things to note after your preliminary inspection:\n\n-   These data are at the census tract level and include geographic identifiers including **geoid**, the combined, state-county-tract FIPS code, **state** the state name, and **county** the county name.\n-   These data include a field named **Designated** which is 1 when an eligible tract was designated as an opportunity zone, and `NA` where the tract was not designated.\n-   The dataset also includes some other tract-level demographic measures, as well as additional geographic flags (variables that take the value 0 or 1).\n\n## Query and Describe the Data\n\nThe dataset we're looking at is for the entire United States. We can easily summarize characteristics of the entire dataset.\n\n## Recoding Values\n\nOne of the characteristics tracked in the Urban Institute data is the median household income for each designated census tract. We might question whether there's a difference in the median household income for designated and not-designated but eligible census tracts. This may help us understand something about whether the most needy tracts were selected from those that are eligible.\n\nHow would we do this? Conceptually...\n\n-   We need to split our data into designated and not designated census tracts, and then calculate the average of the median income separately for these tracts.\n-   Before we do this, let's take care of one bit of housekeeping. The Urban Institute has coded the designated variable as either taking a value of 1 when designated or `NA` when not. Let's *recode* those NA values to equal 0 instead.\n-   To recode, we need to select those values from the Designated column in the ozs data frame where the value is `NA` and overwrite them with a new value of 0.\n\nThere's lots of ways we could do this:\n\n### Strategy 1 - Conditional Statement\n\nWe could use a conditional statement `ifelse()` to specify that if a value is NA in the Designated column we change it to 0.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> mutate(Designated = ifelse(is.na(Designated), 0, Designated))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 42,176 × 27\n   geoid      state Desig…¹ county Type  dec_s…² SE_Flag Popul…³ medhh…⁴ Pover…⁵\n   <chr>      <chr>   <dbl> <chr>  <chr>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 010010202… Alab…       0 Autau… Low-…       4      NA    2196   41107  0.240 \n 2 010010203… Alab…       0 Autau… Non-…       6      NA    3136   51250  0.107 \n 3 010010207… Alab…       1 Autau… Low-…       9      NA    3047   45234  0.190 \n 4 010010208… Alab…       0 Autau… Non-…      10      NA   10743   61242  0.153 \n 5 010010210… Alab…       0 Autau… Non-…       5      NA    2899   49567  0.151 \n 6 010010211… Alab…       0 Autau… Low-…       6      NA    3247   40801  0.194 \n 7 010030101… Alab…       0 Baldw… Non-…       6      NA    4013   45667  0.140 \n 8 010030102… Alab…       1 Baldw… Low-…       9      NA    3067   33333  0.272 \n 9 010030103… Alab…       0 Baldw… Non-…      10      NA    8079   47443  0.0684\n10 010030104… Alab…       1 Baldw… Non-…       9      NA    4578   46696  0.148 \n# … with 42,166 more rows, 17 more variables: unemprate <dbl>, medvalue <dbl>,\n#   medrent <dbl>, pctown <dbl>, severerentburden <dbl>, vacancyrate <dbl>,\n#   pctwhitealone <dbl>, pctblackalone <dbl>, pctHispanic <dbl>,\n#   pctAAPIalone <dbl>, pctunder18 <dbl>, pctover64 <dbl>, HSorlower <dbl>,\n#   BAorhigher <dbl>, Metro <dbl>, Micro <dbl>, NoCBSAType <dbl>, and\n#   abbreviated variable names ¹​Designated, ²​dec_score, ³​Population,\n#   ⁴​medhhincome2014_tract, ⁵​PovertyRate\n```\n:::\n:::\n\n\nIn `dplyr` syntax, what we said here was *with reference to the ozs dataset* `ozs |>` let's alter the dataset `mutate()`. Let's alter the column named Designated `mutate(Designated = )`. Let's alter the column named Designated conditionally `mutate(Designated = ifelse())`. If the value of Designated is equal to `NA`, replace it with 0, otherwise keep the value present in the Designated observation `mutate(Designated = ifelse(is.na(Designated), 0, Designated))`.\n\n::: aside\nLooking at this `ifelse()` statement, you might have been tempted to write something like `Designated ==`NA\\``which will not work.`is.na()`is the proper logical test to return whether a value is or is not`NA\\`.\n:::\n\n### Strategy 2: Use a Specialized Command\n\nWe could use a specialized command such as `replace_na()` from the `tidyr` package to replace our `NA` values:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> mutate(Designated = replace_na(Designated, 0))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 42,176 × 27\n   geoid      state Desig…¹ county Type  dec_s…² SE_Flag Popul…³ medhh…⁴ Pover…⁵\n   <chr>      <chr>   <dbl> <chr>  <chr>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 010010202… Alab…       0 Autau… Low-…       4      NA    2196   41107  0.240 \n 2 010010203… Alab…       0 Autau… Non-…       6      NA    3136   51250  0.107 \n 3 010010207… Alab…       1 Autau… Low-…       9      NA    3047   45234  0.190 \n 4 010010208… Alab…       0 Autau… Non-…      10      NA   10743   61242  0.153 \n 5 010010210… Alab…       0 Autau… Non-…       5      NA    2899   49567  0.151 \n 6 010010211… Alab…       0 Autau… Low-…       6      NA    3247   40801  0.194 \n 7 010030101… Alab…       0 Baldw… Non-…       6      NA    4013   45667  0.140 \n 8 010030102… Alab…       1 Baldw… Low-…       9      NA    3067   33333  0.272 \n 9 010030103… Alab…       0 Baldw… Non-…      10      NA    8079   47443  0.0684\n10 010030104… Alab…       1 Baldw… Non-…       9      NA    4578   46696  0.148 \n# … with 42,166 more rows, 17 more variables: unemprate <dbl>, medvalue <dbl>,\n#   medrent <dbl>, pctown <dbl>, severerentburden <dbl>, vacancyrate <dbl>,\n#   pctwhitealone <dbl>, pctblackalone <dbl>, pctHispanic <dbl>,\n#   pctAAPIalone <dbl>, pctunder18 <dbl>, pctover64 <dbl>, HSorlower <dbl>,\n#   BAorhigher <dbl>, Metro <dbl>, Micro <dbl>, NoCBSAType <dbl>, and\n#   abbreviated variable names ¹​Designated, ²​dec_score, ³​Population,\n#   ⁴​medhhincome2014_tract, ⁵​PovertyRate\n```\n:::\n:::\n\n\nNote that in `replace_na()` we are specifying the column we want to replace the NA value in as well as the value we want to replace NA with.\n\n### Strategy 3: Recode and Change Format\n\nDepending upon what we wanted to do with our Designated labels, we could simultaneously deal with recoding our NA values and relabeling the values for legibility. `case_when()` is useful for these more complex operations:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> mutate(\n  Designated = case_when(\n    Designated == 1 ~\"Designated\",\n    is.na(Designated) ~\"Not Designated\"\n))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 42,176 × 27\n   geoid      state Desig…¹ county Type  dec_s…² SE_Flag Popul…³ medhh…⁴ Pover…⁵\n   <chr>      <chr> <chr>   <chr>  <chr>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 010010202… Alab… Not De… Autau… Low-…       4      NA    2196   41107  0.240 \n 2 010010203… Alab… Not De… Autau… Non-…       6      NA    3136   51250  0.107 \n 3 010010207… Alab… Design… Autau… Low-…       9      NA    3047   45234  0.190 \n 4 010010208… Alab… Not De… Autau… Non-…      10      NA   10743   61242  0.153 \n 5 010010210… Alab… Not De… Autau… Non-…       5      NA    2899   49567  0.151 \n 6 010010211… Alab… Not De… Autau… Low-…       6      NA    3247   40801  0.194 \n 7 010030101… Alab… Not De… Baldw… Non-…       6      NA    4013   45667  0.140 \n 8 010030102… Alab… Design… Baldw… Low-…       9      NA    3067   33333  0.272 \n 9 010030103… Alab… Not De… Baldw… Non-…      10      NA    8079   47443  0.0684\n10 010030104… Alab… Design… Baldw… Non-…       9      NA    4578   46696  0.148 \n# … with 42,166 more rows, 17 more variables: unemprate <dbl>, medvalue <dbl>,\n#   medrent <dbl>, pctown <dbl>, severerentburden <dbl>, vacancyrate <dbl>,\n#   pctwhitealone <dbl>, pctblackalone <dbl>, pctHispanic <dbl>,\n#   pctAAPIalone <dbl>, pctunder18 <dbl>, pctover64 <dbl>, HSorlower <dbl>,\n#   BAorhigher <dbl>, Metro <dbl>, Micro <dbl>, NoCBSAType <dbl>, and\n#   abbreviated variable names ¹​Designated, ²​dec_score, ³​Population,\n#   ⁴​medhhincome2014_tract, ⁵​PovertyRate\n```\n:::\n:::\n\n\nWhat's going on here? `case_when()` allows us to conditionally recode values. We specify the condition and then what to do when that condition is met. For instance, we specify the condition `Designated == 1` and then say when this condition is met, we want you to change that observation to Designated `~\"Designated\"`. We then say what to do if the value is `NA` - label it as \"Not Designated\".\n\nFor the sake of legibility, let's use the third strategy on our dataset:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs <- ozs |> mutate(\n  Designated = case_when(\n    Designated == 1 ~\"Designated\",\n    is.na(Designated) ~\"Not Designated\"\n))\n```\n:::\n\n\nAnd here's what our Designated column now looks like:\n\n\n::: {.cell}\n::: {.cell-output-display}\n```{=html}\n<div id=\"srmgvwbewm\" style=\"overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#srmgvwbewm .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#srmgvwbewm .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#srmgvwbewm .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#srmgvwbewm .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#srmgvwbewm .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#srmgvwbewm .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#srmgvwbewm .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#srmgvwbewm .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#srmgvwbewm .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#srmgvwbewm .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#srmgvwbewm .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#srmgvwbewm .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#srmgvwbewm .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#srmgvwbewm .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#srmgvwbewm .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#srmgvwbewm .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#srmgvwbewm .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#srmgvwbewm .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#srmgvwbewm .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#srmgvwbewm .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#srmgvwbewm .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#srmgvwbewm .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#srmgvwbewm .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#srmgvwbewm .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#srmgvwbewm .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#srmgvwbewm .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#srmgvwbewm .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#srmgvwbewm .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#srmgvwbewm .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#srmgvwbewm .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#srmgvwbewm .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#srmgvwbewm .gt_left {\n  text-align: left;\n}\n\n#srmgvwbewm .gt_center {\n  text-align: center;\n}\n\n#srmgvwbewm .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#srmgvwbewm .gt_font_normal {\n  font-weight: normal;\n}\n\n#srmgvwbewm .gt_font_bold {\n  font-weight: bold;\n}\n\n#srmgvwbewm .gt_font_italic {\n  font-style: italic;\n}\n\n#srmgvwbewm .gt_super {\n  font-size: 65%;\n}\n\n#srmgvwbewm .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#srmgvwbewm .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#srmgvwbewm .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#srmgvwbewm .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#srmgvwbewm .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#srmgvwbewm .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#srmgvwbewm .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">geoid</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\">state</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\">county</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Designated</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td class=\"gt_row gt_right\">01001020200</td>\n<td class=\"gt_row gt_left\">Alabama</td>\n<td class=\"gt_row gt_left\">Autauga County</td>\n<td class=\"gt_row gt_left\">Not Designated</td></tr>\n    <tr><td class=\"gt_row gt_right\">01001020300</td>\n<td class=\"gt_row gt_left\">Alabama</td>\n<td class=\"gt_row gt_left\">Autauga County</td>\n<td class=\"gt_row gt_left\">Not Designated</td></tr>\n    <tr><td class=\"gt_row gt_right\">01001020700</td>\n<td class=\"gt_row gt_left\">Alabama</td>\n<td class=\"gt_row gt_left\">Autauga County</td>\n<td class=\"gt_row gt_left\">Designated</td></tr>\n    <tr><td class=\"gt_row gt_right\">01001020802</td>\n<td class=\"gt_row gt_left\">Alabama</td>\n<td class=\"gt_row gt_left\">Autauga County</td>\n<td class=\"gt_row gt_left\">Not Designated</td></tr>\n    <tr><td class=\"gt_row gt_right\">01001021000</td>\n<td class=\"gt_row gt_left\">Alabama</td>\n<td class=\"gt_row gt_left\">Autauga County</td>\n<td class=\"gt_row gt_left\">Not Designated</td></tr>\n    <tr><td class=\"gt_row gt_right\">01001021100</td>\n<td class=\"gt_row gt_left\">Alabama</td>\n<td class=\"gt_row gt_left\">Autauga County</td>\n<td class=\"gt_row gt_left\">Not Designated</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\n## Summarizing Data\n\nNow that we've recoded our designated column, let's do some description of the characteristics of designated and not designated places.\n\nLet's use a combination of `group_by()` and `summarise()` to produce a summary table showing the mean value for designated and not designated census tracts.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> \n  group_by(Designated) |> \n  summarise(Income = mean(medhhincome2014_tract))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  Designated     Income\n  <chr>           <dbl>\n1 Designated         NA\n2 Not Designated     NA\n```\n:::\n:::\n\n\nWe getting a table back, but why did we get `NA` insted of numbers here? If you've ever used the average `mean()` command in R, you probably understand what's going on here. As a safety measure, when you average values, R will return NA if any value in that series is `NA`. If you're not expecting any `NA` values, this is good, becuase you'll quickly discover that there are unexpected `NA` values in your dataset. We might expect a few census tracts with missing income values coded as `NA`, so we will want to indicate `na.rm = TRUE` here so that R removes those NAs when calculating the mean.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> \n  group_by(Designated) |> \n  summarise(Income = mean(medhhincome2014_tract, na.rm=TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 2\n  Designated     Income\n  <chr>           <dbl>\n1 Designated     33345.\n2 Not Designated 44446.\n```\n:::\n:::\n\n\nMuch better. We can see that that *on average*, the median household income for eligible designated census tracts is lower than that for eligible not designated census tracts. Since the Opportunity Zone legislation is designed to target distressed neighborhoods, this is a good sign that program targeting is focused on neighborhoods with greater need.\n\nWe might want to add some additional information to our summary table. One useful piece of information would be the number of census tracts that are designated or not designated.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> \n  group_by(Designated) |> \n  summarise(\n    Tracts = n(),\n    Income = mean(medhhincome2014_tract, na.rm=TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  Designated     Tracts Income\n  <chr>           <int>  <dbl>\n1 Designated       8762 33345.\n2 Not Designated  33414 44446.\n```\n:::\n:::\n\n\nWithin a `summarise()` statement, `n()` gives us a count of observations (rows) for each grouping. In this case, there are 8,762 census tracts designated as opportunity zones, and an additional 33,414 that were eligible based upon program criteria but not designated.\n\nWe could easily add other summaries to our summary table for this dataset, or further modify.\n\n## Filtering Data\n\nNow that we have some sense for how we might produce basic summaries of our data, how can we query out (filter) observations by row? How, for instance, would you modify the above code to produce the same table for *counties* in *Illinois*?\n\nWe can use a `filter()` statement to easily accomplish this. `filter()` allows us to specify one (or more) criteria for which we want to select rows from a larger dataset.\n\nLet's take a step back and filter our base dataset to focus on observations in Illinois.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> filter(state == \"Illinois\")\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 1,659 × 27\n   geoid      state Desig…¹ county Type  dec_s…² SE_Flag Popul…³ medhh…⁴ Pover…⁵\n   <chr>      <chr> <chr>   <chr>  <chr>   <dbl>   <dbl>   <dbl>   <dbl>   <dbl>\n 1 170010002… Illi… Not De… Adams… Non-…       7      NA    1937   41538  0.167 \n 2 170010002… Illi… Not De… Adams… Low-…       1      NA    2563   40018  0.171 \n 3 170010004… Illi… Not De… Adams… Low-…       1      NA    3403   28819  0.316 \n 4 170010005… Illi… Not De… Adams… Low-…       1      NA    2298   32313  0.252 \n 5 170010007… Illi… Not De… Adams… Low-…       1      NA    1259   17850  0.369 \n 6 170010008… Illi… Design… Adams… Low-…       1      NA    2700   26012  0.344 \n 7 170010009… Illi… Not De… Adams… Low-…       5      NA    2671   40475  0.282 \n 8 170010101… Illi… Not De… Adams… Non-…       2      NA    4323   50156  0.0800\n 9 170010102… Illi… Not De… Adams… Low-…       2      NA    3436   46350  0.107 \n10 170010103… Illi… Not De… Adams… Non-…       8      NA    6038   59009  0.0617\n# … with 1,649 more rows, 17 more variables: unemprate <dbl>, medvalue <dbl>,\n#   medrent <dbl>, pctown <dbl>, severerentburden <dbl>, vacancyrate <dbl>,\n#   pctwhitealone <dbl>, pctblackalone <dbl>, pctHispanic <dbl>,\n#   pctAAPIalone <dbl>, pctunder18 <dbl>, pctover64 <dbl>, HSorlower <dbl>,\n#   BAorhigher <dbl>, Metro <dbl>, Micro <dbl>, NoCBSAType <dbl>, and\n#   abbreviated variable names ¹​Designated, ²​dec_score, ³​Population,\n#   ⁴​medhhincome2014_tract, ⁵​PovertyRate\n```\n:::\n:::\n\n\nRecall that the ozs dataset has 42,176 observations (rows). We filtered the data using the criteria that the value of state is equal to \"Illinois\", resulting in 1,659 observations (eligible census tracts in Illinois).\n\nFrom here, we can re-use our prior code to produce a summary table that is focused on Illinois.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> \n  filter(state == \"Illinois\") |> \n  group_by(Designated) |> \n  summarise(\n    Tracts = n(),\n    Income = mean(medhhincome2014_tract, na.rm=TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 2 × 3\n  Designated     Tracts Income\n  <chr>           <int>  <dbl>\n1 Designated        327 30504.\n2 Not Designated   1332 45281.\n```\n:::\n:::\n\n\nOk - but how do we summarise by county? We just need to add that as an additional grouping criteria in our `group_by()` statement:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> \n  filter(state == \"Illinois\") |> \n  group_by(county, Designated) |> \n  summarise(\n    Tracts = n(),\n    Income = mean(medhhincome2014_tract, na.rm=TRUE))\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 181 × 4\n# Groups:   county [95]\n   county           Designated     Tracts Income\n   <chr>            <chr>           <int>  <dbl>\n 1 Adams County     Designated          1 26012 \n 2 Adams County     Not Designated      9 39614.\n 3 Alexander County Designated          1 21500 \n 4 Alexander County Not Designated      3 32809 \n 5 Bond County      Designated          1 49590 \n 6 Bond County      Not Designated      1 52310 \n 7 Boone County     Designated          1 40599 \n 8 Boone County     Not Designated      2 45742 \n 9 Bureau County    Designated          1 48083 \n10 Bureau County    Not Designated      3 60339.\n# … with 171 more rows\n```\n:::\n:::\n\n\nWe are basically saying, group by both county and designated and then summarize for each.\n\nWith a few lines of code, we can produce very powerful and specific kinds of summaries for our data.\n\n## Pivoting Data\n\nOur summary is getting more nuanced. We've used `group_by()` and `summarise()` to sumamrise data based upon certain characteristics. We've summarized in such a way where for our Illinois counties, we have two observations for each county - one that summarises values for designated tracts in that county, and one that summarises values for not designated tracts.\n\nIt might be useful for us to reshape our summary table so that there is one row for each county, with each row containing the summary value for both designated and not designated tracts.\n\nThe two commands `pivot_wider()` and `pivot_longer()` are useful for reshaping our data. `pivot_wider()` essentially adds columns to a dataset by transitioning content from rows to columns. `pivot_longer()` does the opposite - it makes a dataset longer by transitioning columns to rows.\n\nIn our case, let's use `pivot_wider()` to transition our Designated and Not Designated rows into columns.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> \n  filter(state == \"Illinois\") |> \n  group_by(county, Designated) |> \n  summarise(\n    Tracts = n(),\n    Income = mean(medhhincome2014_tract, na.rm=TRUE)) |> pivot_wider(names_from = Designated, values_from = Income)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 172 × 4\n# Groups:   county [95]\n   county           Tracts Designated `Not Designated`\n   <chr>             <int>      <dbl>            <dbl>\n 1 Adams County          1      26012              NA \n 2 Adams County          9         NA           39614.\n 3 Alexander County      1      21500              NA \n 4 Alexander County      3         NA           32809 \n 5 Bond County           1      49590           52310 \n 6 Boone County          1      40599              NA \n 7 Boone County          2         NA           45742 \n 8 Bureau County         1      48083              NA \n 9 Bureau County         3         NA           60339.\n10 Calhoun County        2         NA           55290 \n# … with 162 more rows\n```\n:::\n:::\n\n\nWe start with our previous summary and pass two arguments to `pivot_wider()`.\n\nWe use `names_from` to specify the column in our dataset contining row values that we *want* to become new columns. In this case we'd expect that our Desginated column would result in the creation of two new columns - one where values are Designated and one where values are Not Designated.\n\nWe use `values_from` to specify the column containing the values we want in our new columns, in this case, the average of tract income.\n\nOne problem though - our tract count column is still present and these values are not reshaped. To simplify things, let's just get rid of this count so we can see what things look like:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> \n  filter(state == \"Illinois\") |> \n  group_by(county, Designated) |> \n  summarise(\n    Income = mean(medhhincome2014_tract, na.rm=TRUE)) |> pivot_wider(names_from = Designated, values_from = Income)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 95 × 3\n# Groups:   county [95]\n   county           Designated `Not Designated`\n   <chr>                 <dbl>            <dbl>\n 1 Adams County         26012            39614.\n 2 Alexander County     21500            32809 \n 3 Bond County          49590            52310 \n 4 Boone County         40599            45742 \n 5 Bureau County        48083            60339.\n 6 Calhoun County          NA            55290 \n 7 Carroll County       35184            58942 \n 8 Cass County          37679            46840.\n 9 Champaign County     13989.           45604.\n10 Christian County     36164            45945.\n# … with 85 more rows\n```\n:::\n:::\n\n\nLooking good! To make things a bit more informative, let's also show the difference in income between designated and not designated tracts:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> \n  filter(state == \"Illinois\") |> \n  group_by(county, Designated) |> \n  summarise(\n    Income = mean(medhhincome2014_tract, na.rm=TRUE)) |> pivot_wider(names_from = Designated, values_from = Income) |> \n  mutate(Difference = Designated - `Not Designated`)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 95 × 4\n# Groups:   county [95]\n   county           Designated `Not Designated` Difference\n   <chr>                 <dbl>            <dbl>      <dbl>\n 1 Adams County         26012            39614.    -13602.\n 2 Alexander County     21500            32809     -11309 \n 3 Bond County          49590            52310      -2720 \n 4 Boone County         40599            45742      -5143 \n 5 Bureau County        48083            60339.    -12256.\n 6 Calhoun County          NA            55290         NA \n 7 Carroll County       35184            58942     -23758 \n 8 Cass County          37679            46840.     -9162.\n 9 Champaign County     13989.           45604.    -31615.\n10 Christian County     36164            45945.     -9781.\n# … with 85 more rows\n```\n:::\n:::\n\n\nOne note here - in the last `mutate()` statement, you see that Not Designated has backticks around it. This is because there's a space between \"Not\" and \"Designated\" which will be treated as separate variable names. The backticks allow this to be referenced as a column. We could change the name to something like Not_Designated, but backticks will allow us to appropriately reference it as well.\n\n## Joining Tables\n\nLinking together the place data to the ozs data might would give us some additional context regarding opportunity zones. Remember that the opportunity zones data itemizes those census tracts that were *eligible* for designation with the Designated column denoting which eligible census tracts actually became opportunity zones. If we link together information for census tracts which were not eligible for designation, we could learn something about the differences between undesignated, eligible not designated, and eligible designated census tracts.\n\nIn order to link together these two datasets, we need to learn about and apply *relational joins* to bring these two datasets together.\n\n### Joins Overview\n\nJoins are methods to merge two datasets based on common attributes. It's rare that one single dataset contains all of the information you wish to tell a story about, so it's important to understand how joins work.\n\nA Venn diagram of join types.\n\n![](04_describing/images/joins_venn.png)\nThe `tidyverse` package which we've installed and loaded in the past can perform seven different types of relational joins. We'll discuss six of them briefly, but focus on four key types. Joins require us to have two tables with some type of common identifier column present in both that we can match records based on.\n\n### Join Types\n\nLet's assume we have two data frames named `x` and `y`, and we're trying to match a column called `key` in both datasets.\n\n-   `left_join()`: A left join returns every row in `x` and all the columns from `x` and `y`. If a value in the `key` column in `x` doesn't exist in `y`, the row will contain `NA` values for all the `y` columns. If there are multiple `key` matches, all the possible combinations will be returned.\n\n-   `right_join()`: This is similar to a left join, but returns every row in `y` instead.\n\n-   `inner_join()`: An inner join returns all the rows in `x` where there is an `key` match in `y`, and all the columns in `x` and `y`.\n\n-   `full_join()`: A full join returns all rows and all columns from `x` and `y`. If there isn't a match in the `x` `key` column, all `x` columns will return `NA`. (The same is true for `y`.)\n\n-   `semi_join()`: A semi-join returns the rows in `x` where there is an `key` match in `y`. It is different than an inner join in that it only returns the columns in `x` and doesn't duplicate rows if there are multiple matches in `y`.\n\n-   `anti_join()`: An anti-join returns the rows in `x` where there is not a matching `key` in `y`. It only returns the columns in `x`.\n\nYou'll notice that only the first four joins---left, right, inner, and full---merge two datasets. Those are going to be the most valuable ones to learn. Here are a couple of additional illustrations to illustrate how joins work.\n\n![Join example 1](04_describing/images/Join_Types_2.png)\n![Join example 2](04_describing/images/Join_Types_3.jpeg)\nThe basic general syntax for the joins is the same:\n\n`*_join(x, y, by = \"key name\")`\n\n`x` and `y` are self-explanatory. The `by` attribute is used to name the key, or the variable that the two datasets have in common. If you're lucky, they'll have the same name. If you're unlucky, you'll have to type a bit more: `by = c(\"name1\" = \"name2\")`, assuming \"name1\" is the name of the key column in `x` and \"name2\" is the name of the key column in `y`.\n\n### Example\n\nLet's assume we have two data frames: `fruit_1` that contains some characteristics about fruit, and `fruit_2` that has some others. Here's how they're defined:\n\n\n\n\n\nNote that the code above is just another syntax for creating tables as we did in the past.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(fruit_1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 2\n  fruit  color \n  <chr>  <chr> \n1 apple  red   \n2 orange orange\n3 banana yellow\n4 lime   green \n```\n:::\n\n```{.r .cell-code}\nprint(fruit_2)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 4 × 3\n  fruit  shape price\n  <chr>  <chr> <dbl>\n1 orange round  0.4 \n2 banana long   0.3 \n3 lime   oval   0.25\n4 durian spiky  8   \n```\n:::\n:::\n\n\nWhat would be the result of a left join, right join, and inner join of `fruit_1` and `fruit 2`?\n\nNote the following:\n\n-   The **left join** includes all records from fruit_1, but excludes those measures from fruit_2 where there isn't a match in the fruit column (durian). Note that even though there's not shape and price information for apples in fruit_2, the rows are still included, but with NA where the data would be were it present.\n\n-   The **right join** includes all records from fruit_2 but excludes those columns from fruit_1 where there isn't a match in the fruit column. In this case, we're missing color information for durian fruit.\n\n-   The **inner join** includes only those records from fruit_1 and fruit_2 where there were matches in both datasets.\n\nThe powerful thing about these joins is that they allow us to bring together data with different shapes and we can control which elements of the data are joined. Joins will become far more intuitive as you use them more.\n\n### Joining Together OZs and Place datasets\n\nNow that we have a sense for how joins work, let's combine our oz and place into one larger table. \n\n\n::: {.cell}\n\n```{.r .cell-code}\nplace <- read_csv(\"04_describing/data/place_name.csv\")\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRows: 73057 Columns: 5\n── Column specification ────────────────────────────────────────────────────────\nDelimiter: \",\"\nchr (5): STATEFP, COUNTYFP, TRACTCE, GEOID, place_name\n\nℹ Use `spec()` to retrieve the full column specification for this data.\nℹ Specify the column types or set `show_col_types = FALSE` to quiet this message.\n```\n:::\n\n```{.r .cell-code}\nplace\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 73,057 × 5\n   STATEFP COUNTYFP TRACTCE GEOID       place_name\n   <chr>   <chr>    <chr>   <chr>       <chr>     \n 1 01      001      020100  01001020100 Prattville\n 2 01      001      020200  01001020200 Prattville\n 3 01      001      020300  01001020300 Prattville\n 4 01      001      020400  01001020400 Prattville\n 5 01      001      020500  01001020500 Prattville\n 6 01      001      020600  01001020600 Prattville\n 7 01      001      020700  01001020700 Prattville\n 8 01      001      020801  01001020801 <NA>      \n 9 01      001      020802  01001020802 <NA>      \n10 01      001      020900  01001020900 <NA>      \n# … with 73,047 more rows\n```\n:::\n:::\n\nIf you take a look at both tables, you'll note that they have a field in common called geoid. This represents a unique code that is assigned to each census tract geography. Technically, this is a FIPS ([Federal Information Processing Standards](https://www.nist.gov/standardsgov/compliance-faqs-federal-information-processing-standards-fips)) code. FIPS codes for tracts are hierarchical - the first two digits are unique to each state, the next three digits correspond to each county, and the remaining six digits are unique to each census tract in that county.\n\nBecause each tract is labelled with corresponding FIPS codes, we can join the two datasets together based upon this common field. This will become a fairly common action for you that you will repeat over the course of this class.\n\nNext, we should think carefully about what kind of join we want. We know we have ozs data for a subset of census tracts in the U.S. and we have the place data for a more expansive set of tracts. If we want to preserve the more extensive data (including those rows that do not match up with oz- eligible tracts), what type of join should we use and how would we construct it?\n\nJust to make sure we get this correct, I'm going to provide you with the way to complete your first join on real data. We have one more issue to deal with here to successfully join our data together. Recall that join takes three arguments - two table objects to join together and at least one common field to complete the join based on. These columns are both labelled geoid, but one is capitalized and one is not. We'll need to tell our join function that these two columns with different names (different in that one is capitalized and one is not) should be joined to each other. We use the modified `by=c(\"GEOID\" = \"geoid\")` to denote that GEOID in the place data should be joined to geoid in the ozs data. If the names were the same (say, both were GEOID), we could simply say `by=\"GEOID\"` and this would work.\n\nOkay, with that out of the way, let's join our data together:\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset<-left_join(place, ozs, by=c(\"GEOID\" = \"geoid\"))\n```\n:::\n\n\nInto a new object called dataset, we joined all rows from place and those records from ozs that matched. Records from place without a match in ozs will have NA where there could be data.\n\nTake a look at the data:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nView(dataset)\n```\n:::\n\n\nStart by looking at the number of rows in the data - 73,057 - the same number as in the place data - we have brought in all rows from the place data and have joined to in matching rows in the ozs data. It would be useful for us to start off by knowing how many rows fall into each of our three categories - ineligible for designated, eligible and undesignated, and eligible and designated. At this point, the `NA` values in the Designated column reflect ineligible, the 0's in that column reflect eligible but not designated, and the 1's represent eligible and designated.\n\nUse your new knowledge of dplyr's `group_by()` and `summarise()` to create a summary table based upon the three values that we expect the Designated column to take. You've learned that you could define what type of summary you'd like to produce in your `summarise()` statement. Let's use `n()` which counts the number of rows that meet each category specified in group_by():\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndataset %>% group_by(Designated) %>% summarise(n())\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 3 × 2\n  Designated     `n()`\n  <chr>          <int>\n1 Designated      7825\n2 Not Designated 33391\n3 <NA>           31841\n```\n:::\n:::\n\n\nYou should see that we have 31,841 rows (census tracts) that were ineligible for designation, an additional 33,391 that were eligible but not designated, and 7,825 that were eligible and designated. Excellent!\n\nWhat might you want to do next to be able to properly label the three categories that now exist for designated?\n\n## Making Nice Tables\n\nAs many of you have remarked in class, outputting \"nice\" tables is not R's default. There are several packages that can help to clean up tables and make them presentable. Let's learn how to use one such package, the `gt` package. Similar to how GGPlot describes a *grammar of graphics* for visualizations, gt similarly provides methods to shape elements of a table.\n\n### Table Components in GT\n\nIn GT, there are numerous table components which you can format as you wish:\n\n![](https://gt.rstudio.com/reference/figures/gt_parts_of_a_table.svg)\n\ngt's [documentation](https://gt.rstudio.com) can help you become more familiar with these different components.\n\n### Making a First GT Table\n\nLet's start off by taking the Illinois data we were previously working on and styling the table using gt:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> \n  filter(state == \"Illinois\") |> \n  group_by(county, Designated) |> \n  summarise(\n    Income = mean(medhhincome2014_tract, na.rm=TRUE)) |> pivot_wider(names_from = Designated, values_from = Income) |> \n  mutate(Difference = Designated - `Not Designated`) |> \n  gt()\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"aprteuwlgb\" style=\"overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#aprteuwlgb .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#aprteuwlgb .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#aprteuwlgb .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#aprteuwlgb .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#aprteuwlgb .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#aprteuwlgb .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#aprteuwlgb .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#aprteuwlgb .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#aprteuwlgb .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#aprteuwlgb .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#aprteuwlgb .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#aprteuwlgb .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#aprteuwlgb .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#aprteuwlgb .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#aprteuwlgb .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#aprteuwlgb .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#aprteuwlgb .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aprteuwlgb .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#aprteuwlgb .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#aprteuwlgb .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aprteuwlgb .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#aprteuwlgb .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#aprteuwlgb .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#aprteuwlgb .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aprteuwlgb .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#aprteuwlgb .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#aprteuwlgb .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#aprteuwlgb .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#aprteuwlgb .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aprteuwlgb .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#aprteuwlgb .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#aprteuwlgb .gt_left {\n  text-align: left;\n}\n\n#aprteuwlgb .gt_center {\n  text-align: center;\n}\n\n#aprteuwlgb .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#aprteuwlgb .gt_font_normal {\n  font-weight: normal;\n}\n\n#aprteuwlgb .gt_font_bold {\n  font-weight: bold;\n}\n\n#aprteuwlgb .gt_font_italic {\n  font-style: italic;\n}\n\n#aprteuwlgb .gt_super {\n  font-size: 65%;\n}\n\n#aprteuwlgb .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#aprteuwlgb .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#aprteuwlgb .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#aprteuwlgb .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#aprteuwlgb .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#aprteuwlgb .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#aprteuwlgb .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Designated</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Not Designated</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Difference</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Adams County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">26012.00</td>\n<td class=\"gt_row gt_right\">39614.22</td>\n<td class=\"gt_row gt_right\">-13602.2222</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Alexander County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">21500.00</td>\n<td class=\"gt_row gt_right\">32809.00</td>\n<td class=\"gt_row gt_right\">-11309.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Bond County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">49590.00</td>\n<td class=\"gt_row gt_right\">52310.00</td>\n<td class=\"gt_row gt_right\">-2720.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Boone County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">40599.00</td>\n<td class=\"gt_row gt_right\">45742.00</td>\n<td class=\"gt_row gt_right\">-5143.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Bureau County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">48083.00</td>\n<td class=\"gt_row gt_right\">60338.67</td>\n<td class=\"gt_row gt_right\">-12255.6667</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Calhoun County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">55290.00</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Carroll County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">35184.00</td>\n<td class=\"gt_row gt_right\">58942.00</td>\n<td class=\"gt_row gt_right\">-23758.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Cass County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">37679.00</td>\n<td class=\"gt_row gt_right\">46840.50</td>\n<td class=\"gt_row gt_right\">-9161.5000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Champaign County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">13988.83</td>\n<td class=\"gt_row gt_right\">45603.57</td>\n<td class=\"gt_row gt_right\">-31614.7319</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Christian County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">36164.00</td>\n<td class=\"gt_row gt_right\">45945.43</td>\n<td class=\"gt_row gt_right\">-9781.4286</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Clark County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">44460.00</td>\n<td class=\"gt_row gt_right\">50004.67</td>\n<td class=\"gt_row gt_right\">-5544.6667</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Clay County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">39261.00</td>\n<td class=\"gt_row gt_right\">50853.00</td>\n<td class=\"gt_row gt_right\">-11592.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Clinton County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">38047.00</td>\n<td class=\"gt_row gt_right\">51269.00</td>\n<td class=\"gt_row gt_right\">-13222.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Coles County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">30682.00</td>\n<td class=\"gt_row gt_right\">37615.00</td>\n<td class=\"gt_row gt_right\">-6933.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Cook County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">29154.50</td>\n<td class=\"gt_row gt_right\">45208.69</td>\n<td class=\"gt_row gt_right\">-16054.1904</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Crawford County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">41071.00</td>\n<td class=\"gt_row gt_right\">47089.67</td>\n<td class=\"gt_row gt_right\">-6018.6667</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Cumberland County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">41761.00</td>\n<td class=\"gt_row gt_right\">43780.00</td>\n<td class=\"gt_row gt_right\">-2019.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">De Witt County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">44181.00</td>\n<td class=\"gt_row gt_right\">44048.00</td>\n<td class=\"gt_row gt_right\">133.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">DeKalb County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">18462.67</td>\n<td class=\"gt_row gt_right\">55294.50</td>\n<td class=\"gt_row gt_right\">-36831.8333</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Douglas County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">54444.00</td>\n<td class=\"gt_row gt_right\">51593.50</td>\n<td class=\"gt_row gt_right\">2850.5000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">DuPage County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">47140.00</td>\n<td class=\"gt_row gt_right\">60237.04</td>\n<td class=\"gt_row gt_right\">-13097.0435</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Edgar County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">39306.00</td>\n<td class=\"gt_row gt_right\">47314.00</td>\n<td class=\"gt_row gt_right\">-8008.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Edwards County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">39844.00</td>\n<td class=\"gt_row gt_right\">51919.00</td>\n<td class=\"gt_row gt_right\">-12075.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Effingham County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">34028.00</td>\n<td class=\"gt_row gt_right\">47879.67</td>\n<td class=\"gt_row gt_right\">-13851.6667</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Fayette County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">34375.00</td>\n<td class=\"gt_row gt_right\">44675.67</td>\n<td class=\"gt_row gt_right\">-10300.6667</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Franklin County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">36469.00</td>\n<td class=\"gt_row gt_right\">40014.18</td>\n<td class=\"gt_row gt_right\">-3545.1818</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Fulton County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">38279.00</td>\n<td class=\"gt_row gt_right\">45053.11</td>\n<td class=\"gt_row gt_right\">-6774.1111</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Gallatin County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">38750.00</td>\n<td class=\"gt_row gt_right\">45074.00</td>\n<td class=\"gt_row gt_right\">-6324.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Greene County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">35469.00</td>\n<td class=\"gt_row gt_right\">43493.25</td>\n<td class=\"gt_row gt_right\">-8024.2500</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Hamilton County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">54293.00</td>\n<td class=\"gt_row gt_right\">47627.50</td>\n<td class=\"gt_row gt_right\">6665.5000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Hancock County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">50924.00</td>\n<td class=\"gt_row gt_right\">49058.00</td>\n<td class=\"gt_row gt_right\">1866.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Hardin County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">34250.00</td>\n<td class=\"gt_row gt_right\">43860.00</td>\n<td class=\"gt_row gt_right\">-9610.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Henderson County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">49453.00</td>\n<td class=\"gt_row gt_right\">45447.50</td>\n<td class=\"gt_row gt_right\">4005.5000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Henry County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">31845.00</td>\n<td class=\"gt_row gt_right\">45385.20</td>\n<td class=\"gt_row gt_right\">-13540.2000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Iroquois County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">34167.00</td>\n<td class=\"gt_row gt_right\">47590.80</td>\n<td class=\"gt_row gt_right\">-13423.8000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Jackson County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">16960.00</td>\n<td class=\"gt_row gt_right\">34503.50</td>\n<td class=\"gt_row gt_right\">-17543.5000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Jasper County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">39909.00</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Jefferson County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">18411.00</td>\n<td class=\"gt_row gt_right\">45013.62</td>\n<td class=\"gt_row gt_right\">-26602.6250</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Jersey County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">54435.00</td>\n<td class=\"gt_row gt_right\">49565.25</td>\n<td class=\"gt_row gt_right\">4869.7500</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Jo Daviess County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">46731.00</td>\n<td class=\"gt_row gt_right\">49293.50</td>\n<td class=\"gt_row gt_right\">-2562.5000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Johnson County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">40578.00</td>\n<td class=\"gt_row gt_right\">38164.67</td>\n<td class=\"gt_row gt_right\">2413.3333</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Kane County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">47129.00</td>\n<td class=\"gt_row gt_right\">50278.10</td>\n<td class=\"gt_row gt_right\">-3149.1000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Kankakee County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">23971.50</td>\n<td class=\"gt_row gt_right\">48993.08</td>\n<td class=\"gt_row gt_right\">-25021.5769</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Knox County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">23011.00</td>\n<td class=\"gt_row gt_right\">36096.67</td>\n<td class=\"gt_row gt_right\">-13085.6667</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Lake County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">29174.60</td>\n<td class=\"gt_row gt_right\">48117.03</td>\n<td class=\"gt_row gt_right\">-18942.4303</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">LaSalle County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">38625.00</td>\n<td class=\"gt_row gt_right\">46211.08</td>\n<td class=\"gt_row gt_right\">-7586.0769</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Lawrence County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">37883.00</td>\n<td class=\"gt_row gt_right\">42074.33</td>\n<td class=\"gt_row gt_right\">-4191.3333</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Lee County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">43750.00</td>\n<td class=\"gt_row gt_right\">53669.33</td>\n<td class=\"gt_row gt_right\">-9919.3333</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Livingston County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">33250.00</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Logan County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">41824.00</td>\n<td class=\"gt_row gt_right\">54024.25</td>\n<td class=\"gt_row gt_right\">-12200.2500</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Macon County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">21405.20</td>\n<td class=\"gt_row gt_right\">40130.44</td>\n<td class=\"gt_row gt_right\">-18725.2375</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Macoupin County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">48000.00</td>\n<td class=\"gt_row gt_right\">53369.14</td>\n<td class=\"gt_row gt_right\">-5369.1429</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Madison County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">28699.80</td>\n<td class=\"gt_row gt_right\">49991.43</td>\n<td class=\"gt_row gt_right\">-21291.6286</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Marion County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">24932.00</td>\n<td class=\"gt_row gt_right\">39650.29</td>\n<td class=\"gt_row gt_right\">-14718.2857</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Marshall County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">49625.00</td>\n<td class=\"gt_row gt_right\">56748.00</td>\n<td class=\"gt_row gt_right\">-7123.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Mason County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">35179.00</td>\n<td class=\"gt_row gt_right\">46672.20</td>\n<td class=\"gt_row gt_right\">-11493.2000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Massac County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">32198.00</td>\n<td class=\"gt_row gt_right\">44130.00</td>\n<td class=\"gt_row gt_right\">-11932.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">McDonough County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">NaN</td>\n<td class=\"gt_row gt_right\">44538.33</td>\n<td class=\"gt_row gt_right\">NaN</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">McHenry County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">42972.00</td>\n<td class=\"gt_row gt_right\">49938.00</td>\n<td class=\"gt_row gt_right\">-6966.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">McLean County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">11053.00</td>\n<td class=\"gt_row gt_right\">43965.63</td>\n<td class=\"gt_row gt_right\">-32912.6316</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Mercer County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">46705.00</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Montgomery County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">44438.00</td>\n<td class=\"gt_row gt_right\">43921.67</td>\n<td class=\"gt_row gt_right\">516.3333</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Morgan County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">34314.00</td>\n<td class=\"gt_row gt_right\">38475.33</td>\n<td class=\"gt_row gt_right\">-4161.3333</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Moultrie County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">40761.00</td>\n<td class=\"gt_row gt_right\">59008.00</td>\n<td class=\"gt_row gt_right\">-18247.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Ogle County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">43393.00</td>\n<td class=\"gt_row gt_right\">47580.00</td>\n<td class=\"gt_row gt_right\">-4187.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Peoria County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">20660.00</td>\n<td class=\"gt_row gt_right\">39899.95</td>\n<td class=\"gt_row gt_right\">-19239.9545</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Perry County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">31635.00</td>\n<td class=\"gt_row gt_right\">47934.00</td>\n<td class=\"gt_row gt_right\">-16299.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Piatt County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">50185.00</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Pike County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">37837.00</td>\n<td class=\"gt_row gt_right\">41462.75</td>\n<td class=\"gt_row gt_right\">-3625.7500</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Pope County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">32396.00</td>\n<td class=\"gt_row gt_right\">44375.00</td>\n<td class=\"gt_row gt_right\">-11979.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Pulaski County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">28884.00</td>\n<td class=\"gt_row gt_right\">35643.00</td>\n<td class=\"gt_row gt_right\">-6759.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Randolph County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">36902.00</td>\n<td class=\"gt_row gt_right\">48542.14</td>\n<td class=\"gt_row gt_right\">-11640.1429</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Richland County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">24671.00</td>\n<td class=\"gt_row gt_right\">48985.75</td>\n<td class=\"gt_row gt_right\">-24314.7500</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Rock Island County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">31542.50</td>\n<td class=\"gt_row gt_right\">40817.41</td>\n<td class=\"gt_row gt_right\">-9274.9091</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Saline County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">32188.00</td>\n<td class=\"gt_row gt_right\">43553.62</td>\n<td class=\"gt_row gt_right\">-11365.6250</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Sangamon County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">22488.80</td>\n<td class=\"gt_row gt_right\">40009.96</td>\n<td class=\"gt_row gt_right\">-17521.1600</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Schuyler County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">52768.00</td>\n<td class=\"gt_row gt_right\">48594.00</td>\n<td class=\"gt_row gt_right\">4174.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Scott County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">47024.00</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Shelby County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">37689.00</td>\n<td class=\"gt_row gt_right\">49664.25</td>\n<td class=\"gt_row gt_right\">-11975.2500</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">St. Clair County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">20159.71</td>\n<td class=\"gt_row gt_right\">32147.79</td>\n<td class=\"gt_row gt_right\">-11988.0774</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Stark County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">52614.00</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Stephenson County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">26674.50</td>\n<td class=\"gt_row gt_right\">46470.00</td>\n<td class=\"gt_row gt_right\">-19795.5000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Tazewell County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">47367.00</td>\n<td class=\"gt_row gt_right\">47820.73</td>\n<td class=\"gt_row gt_right\">-453.7273</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Union County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">40506.00</td>\n<td class=\"gt_row gt_right\">48029.75</td>\n<td class=\"gt_row gt_right\">-7523.7500</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Vermilion County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">28462.33</td>\n<td class=\"gt_row gt_right\">39596.79</td>\n<td class=\"gt_row gt_right\">-11134.4524</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Wabash County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">54207.00</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Warren County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">37185.00</td>\n<td class=\"gt_row gt_right\">48814.67</td>\n<td class=\"gt_row gt_right\">-11629.6667</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Washington County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">46406.00</td>\n<td class=\"gt_row gt_right\">57554.00</td>\n<td class=\"gt_row gt_right\">-11148.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Wayne County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">47645.00</td>\n<td class=\"gt_row gt_right\">45951.25</td>\n<td class=\"gt_row gt_right\">1693.7500</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">White County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">31250.00</td>\n<td class=\"gt_row gt_right\">48981.00</td>\n<td class=\"gt_row gt_right\">-17731.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Whiteside County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">45106.00</td>\n<td class=\"gt_row gt_right\">45458.10</td>\n<td class=\"gt_row gt_right\">-352.1000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Will County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">30419.00</td>\n<td class=\"gt_row gt_right\">50754.27</td>\n<td class=\"gt_row gt_right\">-20335.2667</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Williamson County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">38083.00</td>\n<td class=\"gt_row gt_right\">42193.00</td>\n<td class=\"gt_row gt_right\">-4110.0000</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Winnebago County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">20346.00</td>\n<td class=\"gt_row gt_right\">37655.07</td>\n<td class=\"gt_row gt_right\">-17309.0714</td></tr>\n    <tr class=\"gt_group_heading_row\">\n      <td colspan=\"3\" class=\"gt_group_heading\">Woodford County</td>\n    </tr>\n    <tr class=\"gt_row_group_first\"><td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">61875.00</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nWe simply added `gt()` as a final command after producing a summary table.\n\n### Formatting Columns\n\nThere's a range of formatting options we can take advantage of to style our table. most formatting options begin with `fmt_` which makes it fairly easy to search for the format type you're looking for. Let's format the \"Designated\", \"Not Designated\", and \"Difference\" columns as currency with no decimal places. While we're at it, let's rename the \"county\" column so \"county\" is capitalized:\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> \n  filter(state == \"Illinois\") |> \n  group_by(county, Designated) |> \n  summarise(\n    Income = mean(medhhincome2014_tract, na.rm=TRUE)) |> pivot_wider(names_from = Designated, values_from = Income) |> \n  mutate(Difference = Designated - `Not Designated`) |> \n  ungroup() |> \n  gt() |> \n  fmt_currency(2:4, decimals = 0) |> \n  cols_label(county = \"County\")\n```\n\n::: {.cell-output-display}\n```{=html}\n<div id=\"lzimcmbkme\" style=\"overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>html {\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Helvetica Neue', 'Fira Sans', 'Droid Sans', Arial, sans-serif;\n}\n\n#lzimcmbkme .gt_table {\n  display: table;\n  border-collapse: collapse;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #A8A8A8;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #A8A8A8;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n}\n\n#lzimcmbkme .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#lzimcmbkme .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#lzimcmbkme .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 0;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#lzimcmbkme .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lzimcmbkme .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#lzimcmbkme .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#lzimcmbkme .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#lzimcmbkme .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#lzimcmbkme .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#lzimcmbkme .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#lzimcmbkme .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#lzimcmbkme .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#lzimcmbkme .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#lzimcmbkme .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#lzimcmbkme .gt_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#lzimcmbkme .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lzimcmbkme .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#lzimcmbkme .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#lzimcmbkme .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lzimcmbkme .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#lzimcmbkme .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#lzimcmbkme .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lzimcmbkme .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lzimcmbkme .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#lzimcmbkme .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#lzimcmbkme .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#lzimcmbkme .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#lzimcmbkme .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-left: 4px;\n  padding-right: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lzimcmbkme .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#lzimcmbkme .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#lzimcmbkme .gt_left {\n  text-align: left;\n}\n\n#lzimcmbkme .gt_center {\n  text-align: center;\n}\n\n#lzimcmbkme .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#lzimcmbkme .gt_font_normal {\n  font-weight: normal;\n}\n\n#lzimcmbkme .gt_font_bold {\n  font-weight: bold;\n}\n\n#lzimcmbkme .gt_font_italic {\n  font-style: italic;\n}\n\n#lzimcmbkme .gt_super {\n  font-size: 65%;\n}\n\n#lzimcmbkme .gt_footnote_marks {\n  font-style: italic;\n  font-weight: normal;\n  font-size: 75%;\n  vertical-align: 0.4em;\n}\n\n#lzimcmbkme .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#lzimcmbkme .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#lzimcmbkme .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#lzimcmbkme .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#lzimcmbkme .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#lzimcmbkme .gt_indent_5 {\n  text-indent: 25px;\n}\n</style>\n<table class=\"gt_table\">\n  \n  <thead class=\"gt_col_headings\">\n    <tr>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" scope=\"col\">County</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Designated</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Not Designated</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_right\" rowspan=\"1\" colspan=\"1\" scope=\"col\">Difference</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td class=\"gt_row gt_left\">Adams County</td>\n<td class=\"gt_row gt_right\">$26,012</td>\n<td class=\"gt_row gt_right\">$39,614</td>\n<td class=\"gt_row gt_right\">−$13,602</td></tr>\n    <tr><td class=\"gt_row gt_left\">Alexander County</td>\n<td class=\"gt_row gt_right\">$21,500</td>\n<td class=\"gt_row gt_right\">$32,809</td>\n<td class=\"gt_row gt_right\">−$11,309</td></tr>\n    <tr><td class=\"gt_row gt_left\">Bond County</td>\n<td class=\"gt_row gt_right\">$49,590</td>\n<td class=\"gt_row gt_right\">$52,310</td>\n<td class=\"gt_row gt_right\">−$2,720</td></tr>\n    <tr><td class=\"gt_row gt_left\">Boone County</td>\n<td class=\"gt_row gt_right\">$40,599</td>\n<td class=\"gt_row gt_right\">$45,742</td>\n<td class=\"gt_row gt_right\">−$5,143</td></tr>\n    <tr><td class=\"gt_row gt_left\">Bureau County</td>\n<td class=\"gt_row gt_right\">$48,083</td>\n<td class=\"gt_row gt_right\">$60,339</td>\n<td class=\"gt_row gt_right\">−$12,256</td></tr>\n    <tr><td class=\"gt_row gt_left\">Calhoun County</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">$55,290</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr><td class=\"gt_row gt_left\">Carroll County</td>\n<td class=\"gt_row gt_right\">$35,184</td>\n<td class=\"gt_row gt_right\">$58,942</td>\n<td class=\"gt_row gt_right\">−$23,758</td></tr>\n    <tr><td class=\"gt_row gt_left\">Cass County</td>\n<td class=\"gt_row gt_right\">$37,679</td>\n<td class=\"gt_row gt_right\">$46,840</td>\n<td class=\"gt_row gt_right\">−$9,162</td></tr>\n    <tr><td class=\"gt_row gt_left\">Champaign County</td>\n<td class=\"gt_row gt_right\">$13,989</td>\n<td class=\"gt_row gt_right\">$45,604</td>\n<td class=\"gt_row gt_right\">−$31,615</td></tr>\n    <tr><td class=\"gt_row gt_left\">Christian County</td>\n<td class=\"gt_row gt_right\">$36,164</td>\n<td class=\"gt_row gt_right\">$45,945</td>\n<td class=\"gt_row gt_right\">−$9,781</td></tr>\n    <tr><td class=\"gt_row gt_left\">Clark County</td>\n<td class=\"gt_row gt_right\">$44,460</td>\n<td class=\"gt_row gt_right\">$50,005</td>\n<td class=\"gt_row gt_right\">−$5,545</td></tr>\n    <tr><td class=\"gt_row gt_left\">Clay County</td>\n<td class=\"gt_row gt_right\">$39,261</td>\n<td class=\"gt_row gt_right\">$50,853</td>\n<td class=\"gt_row gt_right\">−$11,592</td></tr>\n    <tr><td class=\"gt_row gt_left\">Clinton County</td>\n<td class=\"gt_row gt_right\">$38,047</td>\n<td class=\"gt_row gt_right\">$51,269</td>\n<td class=\"gt_row gt_right\">−$13,222</td></tr>\n    <tr><td class=\"gt_row gt_left\">Coles County</td>\n<td class=\"gt_row gt_right\">$30,682</td>\n<td class=\"gt_row gt_right\">$37,615</td>\n<td class=\"gt_row gt_right\">−$6,933</td></tr>\n    <tr><td class=\"gt_row gt_left\">Cook County</td>\n<td class=\"gt_row gt_right\">$29,155</td>\n<td class=\"gt_row gt_right\">$45,209</td>\n<td class=\"gt_row gt_right\">−$16,054</td></tr>\n    <tr><td class=\"gt_row gt_left\">Crawford County</td>\n<td class=\"gt_row gt_right\">$41,071</td>\n<td class=\"gt_row gt_right\">$47,090</td>\n<td class=\"gt_row gt_right\">−$6,019</td></tr>\n    <tr><td class=\"gt_row gt_left\">Cumberland County</td>\n<td class=\"gt_row gt_right\">$41,761</td>\n<td class=\"gt_row gt_right\">$43,780</td>\n<td class=\"gt_row gt_right\">−$2,019</td></tr>\n    <tr><td class=\"gt_row gt_left\">De Witt County</td>\n<td class=\"gt_row gt_right\">$44,181</td>\n<td class=\"gt_row gt_right\">$44,048</td>\n<td class=\"gt_row gt_right\">$133</td></tr>\n    <tr><td class=\"gt_row gt_left\">DeKalb County</td>\n<td class=\"gt_row gt_right\">$18,463</td>\n<td class=\"gt_row gt_right\">$55,294</td>\n<td class=\"gt_row gt_right\">−$36,832</td></tr>\n    <tr><td class=\"gt_row gt_left\">Douglas County</td>\n<td class=\"gt_row gt_right\">$54,444</td>\n<td class=\"gt_row gt_right\">$51,594</td>\n<td class=\"gt_row gt_right\">$2,850</td></tr>\n    <tr><td class=\"gt_row gt_left\">DuPage County</td>\n<td class=\"gt_row gt_right\">$47,140</td>\n<td class=\"gt_row gt_right\">$60,237</td>\n<td class=\"gt_row gt_right\">−$13,097</td></tr>\n    <tr><td class=\"gt_row gt_left\">Edgar County</td>\n<td class=\"gt_row gt_right\">$39,306</td>\n<td class=\"gt_row gt_right\">$47,314</td>\n<td class=\"gt_row gt_right\">−$8,008</td></tr>\n    <tr><td class=\"gt_row gt_left\">Edwards County</td>\n<td class=\"gt_row gt_right\">$39,844</td>\n<td class=\"gt_row gt_right\">$51,919</td>\n<td class=\"gt_row gt_right\">−$12,075</td></tr>\n    <tr><td class=\"gt_row gt_left\">Effingham County</td>\n<td class=\"gt_row gt_right\">$34,028</td>\n<td class=\"gt_row gt_right\">$47,880</td>\n<td class=\"gt_row gt_right\">−$13,852</td></tr>\n    <tr><td class=\"gt_row gt_left\">Fayette County</td>\n<td class=\"gt_row gt_right\">$34,375</td>\n<td class=\"gt_row gt_right\">$44,676</td>\n<td class=\"gt_row gt_right\">−$10,301</td></tr>\n    <tr><td class=\"gt_row gt_left\">Franklin County</td>\n<td class=\"gt_row gt_right\">$36,469</td>\n<td class=\"gt_row gt_right\">$40,014</td>\n<td class=\"gt_row gt_right\">−$3,545</td></tr>\n    <tr><td class=\"gt_row gt_left\">Fulton County</td>\n<td class=\"gt_row gt_right\">$38,279</td>\n<td class=\"gt_row gt_right\">$45,053</td>\n<td class=\"gt_row gt_right\">−$6,774</td></tr>\n    <tr><td class=\"gt_row gt_left\">Gallatin County</td>\n<td class=\"gt_row gt_right\">$38,750</td>\n<td class=\"gt_row gt_right\">$45,074</td>\n<td class=\"gt_row gt_right\">−$6,324</td></tr>\n    <tr><td class=\"gt_row gt_left\">Greene County</td>\n<td class=\"gt_row gt_right\">$35,469</td>\n<td class=\"gt_row gt_right\">$43,493</td>\n<td class=\"gt_row gt_right\">−$8,024</td></tr>\n    <tr><td class=\"gt_row gt_left\">Hamilton County</td>\n<td class=\"gt_row gt_right\">$54,293</td>\n<td class=\"gt_row gt_right\">$47,628</td>\n<td class=\"gt_row gt_right\">$6,666</td></tr>\n    <tr><td class=\"gt_row gt_left\">Hancock County</td>\n<td class=\"gt_row gt_right\">$50,924</td>\n<td class=\"gt_row gt_right\">$49,058</td>\n<td class=\"gt_row gt_right\">$1,866</td></tr>\n    <tr><td class=\"gt_row gt_left\">Hardin County</td>\n<td class=\"gt_row gt_right\">$34,250</td>\n<td class=\"gt_row gt_right\">$43,860</td>\n<td class=\"gt_row gt_right\">−$9,610</td></tr>\n    <tr><td class=\"gt_row gt_left\">Henderson County</td>\n<td class=\"gt_row gt_right\">$49,453</td>\n<td class=\"gt_row gt_right\">$45,448</td>\n<td class=\"gt_row gt_right\">$4,006</td></tr>\n    <tr><td class=\"gt_row gt_left\">Henry County</td>\n<td class=\"gt_row gt_right\">$31,845</td>\n<td class=\"gt_row gt_right\">$45,385</td>\n<td class=\"gt_row gt_right\">−$13,540</td></tr>\n    <tr><td class=\"gt_row gt_left\">Iroquois County</td>\n<td class=\"gt_row gt_right\">$34,167</td>\n<td class=\"gt_row gt_right\">$47,591</td>\n<td class=\"gt_row gt_right\">−$13,424</td></tr>\n    <tr><td class=\"gt_row gt_left\">Jackson County</td>\n<td class=\"gt_row gt_right\">$16,960</td>\n<td class=\"gt_row gt_right\">$34,504</td>\n<td class=\"gt_row gt_right\">−$17,544</td></tr>\n    <tr><td class=\"gt_row gt_left\">Jasper County</td>\n<td class=\"gt_row gt_right\">$39,909</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr><td class=\"gt_row gt_left\">Jefferson County</td>\n<td class=\"gt_row gt_right\">$18,411</td>\n<td class=\"gt_row gt_right\">$45,014</td>\n<td class=\"gt_row gt_right\">−$26,603</td></tr>\n    <tr><td class=\"gt_row gt_left\">Jersey County</td>\n<td class=\"gt_row gt_right\">$54,435</td>\n<td class=\"gt_row gt_right\">$49,565</td>\n<td class=\"gt_row gt_right\">$4,870</td></tr>\n    <tr><td class=\"gt_row gt_left\">Jo Daviess County</td>\n<td class=\"gt_row gt_right\">$46,731</td>\n<td class=\"gt_row gt_right\">$49,294</td>\n<td class=\"gt_row gt_right\">−$2,562</td></tr>\n    <tr><td class=\"gt_row gt_left\">Johnson County</td>\n<td class=\"gt_row gt_right\">$40,578</td>\n<td class=\"gt_row gt_right\">$38,165</td>\n<td class=\"gt_row gt_right\">$2,413</td></tr>\n    <tr><td class=\"gt_row gt_left\">Kane County</td>\n<td class=\"gt_row gt_right\">$47,129</td>\n<td class=\"gt_row gt_right\">$50,278</td>\n<td class=\"gt_row gt_right\">−$3,149</td></tr>\n    <tr><td class=\"gt_row gt_left\">Kankakee County</td>\n<td class=\"gt_row gt_right\">$23,972</td>\n<td class=\"gt_row gt_right\">$48,993</td>\n<td class=\"gt_row gt_right\">−$25,022</td></tr>\n    <tr><td class=\"gt_row gt_left\">Knox County</td>\n<td class=\"gt_row gt_right\">$23,011</td>\n<td class=\"gt_row gt_right\">$36,097</td>\n<td class=\"gt_row gt_right\">−$13,086</td></tr>\n    <tr><td class=\"gt_row gt_left\">Lake County</td>\n<td class=\"gt_row gt_right\">$29,175</td>\n<td class=\"gt_row gt_right\">$48,117</td>\n<td class=\"gt_row gt_right\">−$18,942</td></tr>\n    <tr><td class=\"gt_row gt_left\">LaSalle County</td>\n<td class=\"gt_row gt_right\">$38,625</td>\n<td class=\"gt_row gt_right\">$46,211</td>\n<td class=\"gt_row gt_right\">−$7,586</td></tr>\n    <tr><td class=\"gt_row gt_left\">Lawrence County</td>\n<td class=\"gt_row gt_right\">$37,883</td>\n<td class=\"gt_row gt_right\">$42,074</td>\n<td class=\"gt_row gt_right\">−$4,191</td></tr>\n    <tr><td class=\"gt_row gt_left\">Lee County</td>\n<td class=\"gt_row gt_right\">$43,750</td>\n<td class=\"gt_row gt_right\">$53,669</td>\n<td class=\"gt_row gt_right\">−$9,919</td></tr>\n    <tr><td class=\"gt_row gt_left\">Livingston County</td>\n<td class=\"gt_row gt_right\">$33,250</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr><td class=\"gt_row gt_left\">Logan County</td>\n<td class=\"gt_row gt_right\">$41,824</td>\n<td class=\"gt_row gt_right\">$54,024</td>\n<td class=\"gt_row gt_right\">−$12,200</td></tr>\n    <tr><td class=\"gt_row gt_left\">Macon County</td>\n<td class=\"gt_row gt_right\">$21,405</td>\n<td class=\"gt_row gt_right\">$40,130</td>\n<td class=\"gt_row gt_right\">−$18,725</td></tr>\n    <tr><td class=\"gt_row gt_left\">Macoupin County</td>\n<td class=\"gt_row gt_right\">$48,000</td>\n<td class=\"gt_row gt_right\">$53,369</td>\n<td class=\"gt_row gt_right\">−$5,369</td></tr>\n    <tr><td class=\"gt_row gt_left\">Madison County</td>\n<td class=\"gt_row gt_right\">$28,700</td>\n<td class=\"gt_row gt_right\">$49,991</td>\n<td class=\"gt_row gt_right\">−$21,292</td></tr>\n    <tr><td class=\"gt_row gt_left\">Marion County</td>\n<td class=\"gt_row gt_right\">$24,932</td>\n<td class=\"gt_row gt_right\">$39,650</td>\n<td class=\"gt_row gt_right\">−$14,718</td></tr>\n    <tr><td class=\"gt_row gt_left\">Marshall County</td>\n<td class=\"gt_row gt_right\">$49,625</td>\n<td class=\"gt_row gt_right\">$56,748</td>\n<td class=\"gt_row gt_right\">−$7,123</td></tr>\n    <tr><td class=\"gt_row gt_left\">Mason County</td>\n<td class=\"gt_row gt_right\">$35,179</td>\n<td class=\"gt_row gt_right\">$46,672</td>\n<td class=\"gt_row gt_right\">−$11,493</td></tr>\n    <tr><td class=\"gt_row gt_left\">Massac County</td>\n<td class=\"gt_row gt_right\">$32,198</td>\n<td class=\"gt_row gt_right\">$44,130</td>\n<td class=\"gt_row gt_right\">−$11,932</td></tr>\n    <tr><td class=\"gt_row gt_left\">McDonough County</td>\n<td class=\"gt_row gt_right\">NaN</td>\n<td class=\"gt_row gt_right\">$44,538</td>\n<td class=\"gt_row gt_right\">NaN</td></tr>\n    <tr><td class=\"gt_row gt_left\">McHenry County</td>\n<td class=\"gt_row gt_right\">$42,972</td>\n<td class=\"gt_row gt_right\">$49,938</td>\n<td class=\"gt_row gt_right\">−$6,966</td></tr>\n    <tr><td class=\"gt_row gt_left\">McLean County</td>\n<td class=\"gt_row gt_right\">$11,053</td>\n<td class=\"gt_row gt_right\">$43,966</td>\n<td class=\"gt_row gt_right\">−$32,913</td></tr>\n    <tr><td class=\"gt_row gt_left\">Mercer County</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">$46,705</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr><td class=\"gt_row gt_left\">Montgomery County</td>\n<td class=\"gt_row gt_right\">$44,438</td>\n<td class=\"gt_row gt_right\">$43,922</td>\n<td class=\"gt_row gt_right\">$516</td></tr>\n    <tr><td class=\"gt_row gt_left\">Morgan County</td>\n<td class=\"gt_row gt_right\">$34,314</td>\n<td class=\"gt_row gt_right\">$38,475</td>\n<td class=\"gt_row gt_right\">−$4,161</td></tr>\n    <tr><td class=\"gt_row gt_left\">Moultrie County</td>\n<td class=\"gt_row gt_right\">$40,761</td>\n<td class=\"gt_row gt_right\">$59,008</td>\n<td class=\"gt_row gt_right\">−$18,247</td></tr>\n    <tr><td class=\"gt_row gt_left\">Ogle County</td>\n<td class=\"gt_row gt_right\">$43,393</td>\n<td class=\"gt_row gt_right\">$47,580</td>\n<td class=\"gt_row gt_right\">−$4,187</td></tr>\n    <tr><td class=\"gt_row gt_left\">Peoria County</td>\n<td class=\"gt_row gt_right\">$20,660</td>\n<td class=\"gt_row gt_right\">$39,900</td>\n<td class=\"gt_row gt_right\">−$19,240</td></tr>\n    <tr><td class=\"gt_row gt_left\">Perry County</td>\n<td class=\"gt_row gt_right\">$31,635</td>\n<td class=\"gt_row gt_right\">$47,934</td>\n<td class=\"gt_row gt_right\">−$16,299</td></tr>\n    <tr><td class=\"gt_row gt_left\">Piatt County</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">$50,185</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr><td class=\"gt_row gt_left\">Pike County</td>\n<td class=\"gt_row gt_right\">$37,837</td>\n<td class=\"gt_row gt_right\">$41,463</td>\n<td class=\"gt_row gt_right\">−$3,626</td></tr>\n    <tr><td class=\"gt_row gt_left\">Pope County</td>\n<td class=\"gt_row gt_right\">$32,396</td>\n<td class=\"gt_row gt_right\">$44,375</td>\n<td class=\"gt_row gt_right\">−$11,979</td></tr>\n    <tr><td class=\"gt_row gt_left\">Pulaski County</td>\n<td class=\"gt_row gt_right\">$28,884</td>\n<td class=\"gt_row gt_right\">$35,643</td>\n<td class=\"gt_row gt_right\">−$6,759</td></tr>\n    <tr><td class=\"gt_row gt_left\">Randolph County</td>\n<td class=\"gt_row gt_right\">$36,902</td>\n<td class=\"gt_row gt_right\">$48,542</td>\n<td class=\"gt_row gt_right\">−$11,640</td></tr>\n    <tr><td class=\"gt_row gt_left\">Richland County</td>\n<td class=\"gt_row gt_right\">$24,671</td>\n<td class=\"gt_row gt_right\">$48,986</td>\n<td class=\"gt_row gt_right\">−$24,315</td></tr>\n    <tr><td class=\"gt_row gt_left\">Rock Island County</td>\n<td class=\"gt_row gt_right\">$31,542</td>\n<td class=\"gt_row gt_right\">$40,817</td>\n<td class=\"gt_row gt_right\">−$9,275</td></tr>\n    <tr><td class=\"gt_row gt_left\">Saline County</td>\n<td class=\"gt_row gt_right\">$32,188</td>\n<td class=\"gt_row gt_right\">$43,554</td>\n<td class=\"gt_row gt_right\">−$11,366</td></tr>\n    <tr><td class=\"gt_row gt_left\">Sangamon County</td>\n<td class=\"gt_row gt_right\">$22,489</td>\n<td class=\"gt_row gt_right\">$40,010</td>\n<td class=\"gt_row gt_right\">−$17,521</td></tr>\n    <tr><td class=\"gt_row gt_left\">Schuyler County</td>\n<td class=\"gt_row gt_right\">$52,768</td>\n<td class=\"gt_row gt_right\">$48,594</td>\n<td class=\"gt_row gt_right\">$4,174</td></tr>\n    <tr><td class=\"gt_row gt_left\">Scott County</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">$47,024</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr><td class=\"gt_row gt_left\">Shelby County</td>\n<td class=\"gt_row gt_right\">$37,689</td>\n<td class=\"gt_row gt_right\">$49,664</td>\n<td class=\"gt_row gt_right\">−$11,975</td></tr>\n    <tr><td class=\"gt_row gt_left\">St. Clair County</td>\n<td class=\"gt_row gt_right\">$20,160</td>\n<td class=\"gt_row gt_right\">$32,148</td>\n<td class=\"gt_row gt_right\">−$11,988</td></tr>\n    <tr><td class=\"gt_row gt_left\">Stark County</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">$52,614</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr><td class=\"gt_row gt_left\">Stephenson County</td>\n<td class=\"gt_row gt_right\">$26,674</td>\n<td class=\"gt_row gt_right\">$46,470</td>\n<td class=\"gt_row gt_right\">−$19,796</td></tr>\n    <tr><td class=\"gt_row gt_left\">Tazewell County</td>\n<td class=\"gt_row gt_right\">$47,367</td>\n<td class=\"gt_row gt_right\">$47,821</td>\n<td class=\"gt_row gt_right\">−$454</td></tr>\n    <tr><td class=\"gt_row gt_left\">Union County</td>\n<td class=\"gt_row gt_right\">$40,506</td>\n<td class=\"gt_row gt_right\">$48,030</td>\n<td class=\"gt_row gt_right\">−$7,524</td></tr>\n    <tr><td class=\"gt_row gt_left\">Vermilion County</td>\n<td class=\"gt_row gt_right\">$28,462</td>\n<td class=\"gt_row gt_right\">$39,597</td>\n<td class=\"gt_row gt_right\">−$11,134</td></tr>\n    <tr><td class=\"gt_row gt_left\">Wabash County</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">$54,207</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n    <tr><td class=\"gt_row gt_left\">Warren County</td>\n<td class=\"gt_row gt_right\">$37,185</td>\n<td class=\"gt_row gt_right\">$48,815</td>\n<td class=\"gt_row gt_right\">−$11,630</td></tr>\n    <tr><td class=\"gt_row gt_left\">Washington County</td>\n<td class=\"gt_row gt_right\">$46,406</td>\n<td class=\"gt_row gt_right\">$57,554</td>\n<td class=\"gt_row gt_right\">−$11,148</td></tr>\n    <tr><td class=\"gt_row gt_left\">Wayne County</td>\n<td class=\"gt_row gt_right\">$47,645</td>\n<td class=\"gt_row gt_right\">$45,951</td>\n<td class=\"gt_row gt_right\">$1,694</td></tr>\n    <tr><td class=\"gt_row gt_left\">White County</td>\n<td class=\"gt_row gt_right\">$31,250</td>\n<td class=\"gt_row gt_right\">$48,981</td>\n<td class=\"gt_row gt_right\">−$17,731</td></tr>\n    <tr><td class=\"gt_row gt_left\">Whiteside County</td>\n<td class=\"gt_row gt_right\">$45,106</td>\n<td class=\"gt_row gt_right\">$45,458</td>\n<td class=\"gt_row gt_right\">−$352</td></tr>\n    <tr><td class=\"gt_row gt_left\">Will County</td>\n<td class=\"gt_row gt_right\">$30,419</td>\n<td class=\"gt_row gt_right\">$50,754</td>\n<td class=\"gt_row gt_right\">−$20,335</td></tr>\n    <tr><td class=\"gt_row gt_left\">Williamson County</td>\n<td class=\"gt_row gt_right\">$38,083</td>\n<td class=\"gt_row gt_right\">$42,193</td>\n<td class=\"gt_row gt_right\">−$4,110</td></tr>\n    <tr><td class=\"gt_row gt_left\">Winnebago County</td>\n<td class=\"gt_row gt_right\">$20,346</td>\n<td class=\"gt_row gt_right\">$37,655</td>\n<td class=\"gt_row gt_right\">−$17,309</td></tr>\n    <tr><td class=\"gt_row gt_left\">Woodford County</td>\n<td class=\"gt_row gt_right\">NA</td>\n<td class=\"gt_row gt_right\">$61,875</td>\n<td class=\"gt_row gt_right\">NA</td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n:::\n:::\n\n\nNote that `cols_label` allows us to adjust column labels by supplying the variable name and then the desired name of the column.\n\ngt provides a [nice workflow example](https://gt.rstudio.com/articles/intro-creating-gt-tables.html) to show you step by step how you might apply formatting options to style a table. Also see the [reference guide](https://gt.rstudio.com/reference/index.html) for specific formats.\n\n### Saving a Table\n\nWe can easily use code to insert a table into our document, but what if you want to save it out as a separate file? The `gtsave()` command allows you to save your formatted table in a variety of formats.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nozs |> \n  filter(state == \"Illinois\") |> \n  group_by(county, Designated) |> \n  summarise(\n    Income = mean(medhhincome2014_tract, na.rm=TRUE)) |> pivot_wider(names_from = Designated, values_from = Income) |> \n  mutate(Difference = Designated - `Not Designated`) |> \n  ungroup() |> \n  gt() |> \n  fmt_currency(2:4, decimals = 0) |> \n  cols_label(county = \"County\") |> \n  gtsave(\"il_difference.png\", \"04_describing/output\")\n```\n:::\n\n\nAnd here's the actual table that was produced:\n\n![](04_describing/output/il_difference.png)\n\n## Lab Evaluation\n\nIn evaluating your lab submission, we'll be paying attention to the following:\n\nAs you get into the lab, please feel welcome to ask us questions, and please share where you're struggling with us and with others in the class.\n\n## References\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}